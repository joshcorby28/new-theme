<!-- Frosted popup below header -->
<div id="cart-notification-{{ product.id }}" style="
    display:none;
    position:fixed;
    top:150px;
    right:50%;
    transform: translateX(50%);
    width:95%;
    max-width:400px;
    background: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    box-shadow: 2px 0 8px rgba(0, 0, 0, 0.1);
    border-radius: 4px;
    padding: 30px 20px;
    color:#000;
    z-index:9999;
">
  <strong>Added to cart</strong>
  <div id="cart-items-{{ product.id }}" style="margin-top:12px;"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const productId = '{{ product.id }}';
  const form = document.getElementById(`product-form-${productId}`);
  const addButton = form.querySelector('.add-to-cart');
  const variantIdInput = document.getElementById(`selected-variant-id-${productId}`);
  const quantityInput = form.querySelector(`#qty-${productId}`);
  
  // Cart icon element
  const cartLink = document.querySelector('a[href="{{ routes.cart_url }}"]');
  const notification = document.getElementById(`cart-notification-${productId}`);
  const cartItemsContainer = document.getElementById(`cart-items-${productId}`);

  addButton.addEventListener('click', function() {
    const variantId = variantIdInput.value;
    const quantity = parseInt(quantityInput.value);

    fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
      body: JSON.stringify({ id: variantId, quantity: quantity })
    })
    .then(response => response.json())
    .then(product => {
      // Clear previous popup content (so only last added product shows)
      cartItemsContainer.innerHTML = '';

      // Add product info to popup
      const itemHTML = `
        <div style="display:flex; align-items:center;">
          <img src="${product.image}" style="width:50px; height:50px; object-fit:cover; margin-right:10px; border-radius:6px;">
          <div>
            <div>${product.title}</div>
            <div style="font-size:0.9em; color:#555;">Qty: ${quantity}</div>
          </div>
        </div>
      `;
      cartItemsContainer.insertAdjacentHTML('beforeend', itemHTML);

      // Show popup
      notification.style.display = 'block';

      // Hide popup after 3 seconds
      setTimeout(() => { notification.style.display = 'none'; }, 3000);

      // Update cart count in icon
      fetch('/cart.js', { headers: { 'Accept': 'application/json' } })
        .then(res => res.json())
        .then(cart => {
          if (cart.item_count > 0) {
            cartLink.querySelector('sup')?.remove();
            const sup = document.createElement('sup');
            sup.textContent = cart.item_count;
            cartLink.prepend(sup);
          } else {
            cartLink.querySelector('sup')?.remove();
          }
        });
    })
    .catch(err => console.error('Add to cart error', err));
  });
});
</script>


{% comment %}
  This section is used in the product template to render product page with
  media, content, and add-to-cart form.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/product
{% endcomment %}

{{ 'fract-product.css' | asset_url | stylesheet_tag: preload: true }}

<div class="fract-main-product">
<div class="product-images">
  {% if section.settings.image_layout == 'slider' %}
    <div class="swiper product-gallery-swiper">
    <div class="swiper-wrapper">
      {% for image in product.images %}
        <div class="swiper-slide">
          <img src="{{ image | image_url: width: 900 }}" class="product-image" />
        </div>
      {% endfor %}
    </div>
      <div class="swiper-buttons">
     <div class="swiper-button-prev-smarte">{% render 'icon-arrow-new' %}</div>
     <div class="swiper-button-next-smarte">{% render 'icon-arrow-new' %}</div>
      </div>
  </div>
  {% else %}
    {% for image in product.images %}
      <img src="{{ image | image_url: width: 900 }}" class="product-image" />
    {% endfor %}
  {% endif %}
</div>

<div class="right-side-product">
<div class="fract-info-and-form">
{% if product.tags contains 'comingsoon' %}
  <div class="drop-badge">
    Coming November 15th
  </div>
{% elsif product.variants.size > 1 %}
  <div class="drop-badge">
   Drop One - Discover the Unknown
  </div>
{% endif %}

<div class="product-info">
  <h1>{{ product.title }}</h1>
  <h4>{{ product.price | money }}</h4>
  {% assign current_product = product %}
{% assign related_products = product.metafields.custom.related_products.value %}

{% if related_products %}
  <div class="related-products">

    <!-- Current (active) product -->
    <a 
      href="{{ current_product.url }}" 
      class="related-products__item related-products__item--active"
      title="{{ current_product.title }}"
    >
      {% if current_product.featured_image %}
        <img 
          src="{{ current_product.featured_image | img_url: '200x200' }}" 
          alt="{{ current_product.title }}" 
          class="related-products__image"
          loading="lazy"
        >
      {% else %}
        <div class="related-products__placeholder"></div>
      {% endif %}
    </a>

    <!-- Related products -->
    {% for related_product in related_products %}
      <a 
        href="{{ related_product.url }}" 
        class="related-products__item" 
        title="{{ related_product.title }}"
      >
        {% if related_product.featured_image %}
          <img 
            src="{{ related_product.featured_image | img_url: '200x200' }}" 
            alt="{{ related_product.title }}" 
            class="related-products__image"
            loading="lazy"
          >
        {% else %}
          <div class="related-products__placeholder"></div>
        {% endif %}
      </a>
    {% endfor %}
  </div>
{% endif %}

</div>
<div class="product-form" id="product-form-{{ product.id }}">
  {% assign current_variant = product.selected_or_first_available_variant %}
  <div class="variant-buttons">
    {% for variant in product.variants %}
      <button
        type="button"
        class="variant-button{% if variant == current_variant %} active{% endif %}"
        data-variant-id="{{ variant.id }}"
        {% unless variant.available %}disabled{% endunless %}
      >
        {{ variant.title }}
      </button>
    {% endfor %}
    {% form 'product', product %}
<input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" />
{{ form | payment_terms }}
{% endform %}
  </div>

  <input type="hidden" id="selected-variant-id-{{ product.id }}" value="{{ current_variant.id }}">

  <div class="qty-and-form">
    <div class="quantity-selector">
      <button type="button" class="qty-btn minus">-</button>
      <input type="number" id="qty-{{ product.id }}" min="1" value="1" class="qty-input"/>
      <button type="button" class="qty-btn plus">+</button>
    </div>

    <button type="button" class="add-to-cart fract-primary">Add to cart</button>
  </div>
</div>




</div>
  <div class="product-extras">
{% if section.settings.show-stock-indicator %}
  {% assign total_inventory = 0 %}

  {% for variant in product.variants %}
    {% assign total_inventory = total_inventory | plus: variant.inventory_quantity %}
  {% endfor %}

  {% assign in_stock = product.available %}

  <div class="stock-indicator-wrapper">
    {% if in_stock %}
      {% if total_inventory < 7 %}
        <div class="stock-indicator low-stock">
          <span class="circle"></span>
          <span>Limited Stock</span>
        </div>
      {% else %}
        <div class="stock-indicator in-stock">
          <span class="circle"></span>
          <span>In Stock</span>
        </div>
      {% endif %}
    {% else %}
      <div class="stock-indicator out-of-stock">
        <span class="circle"></span>
        <span>Out of Stock</span>
      </div>
    {% endif %}
  </div>
{% endif %}


  {% assign usp_point = product.metafields.custom.usp_point %}
  {% if usp_point %}
    <div class="product-usp-point">      
      <div class="usp-point">
      <span class="icon" aria-hidden="true">
        <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
          <path d="M5 13l4 4L19 7" />
        </svg>
      </span>
       <span>{{ usp_point.value }}</span>
      </div>
    </div>
  {% endif %}
          </div>
            <div class="custom-accordion">
  {% if section.settings.show_product_info %}
    <details class="accordion-item">
      <summary>Product Info</summary>
      <div class="accordion-content">
        {{ product.description }}
      </div>
    </details>
  {% endif %}

  {% if section.settings.show_size_guide %}
    <details class="accordion-item">
      <summary>Size Guide</summary>
      <div class="accordion-content">
        {% if product.metafields.custom.size_guide %}
          <img 
            src="{{ product.metafields.custom.size_guide.value | image_url: width: 800 }}" 
            alt="Size Guide for {{ product.title }}" 
            style="max-width: 100%; height: auto; margin-top: 1rem;"
          >
        {% else %}
          <p>No size guide available for this product.</p>
        {% endif %}
      </div>
    </details>
  {% endif %}

  {% if section.settings.show_custom_content %}
    <details class="accordion-item">
      <summary>Custom Content</summary>
      <div class="accordion-content">
        <p>This is your custom content block. Add text, HTML, or metafields here.</p>
      </div>
    </details>
  {% endif %}
</div>


  </div>
</div>

{% schema %}
{
  "name": "t:general.product",
  "settings": [
    {
      "type": "select",
      "id": "image_layout",
      "label": "Product image layout",
      "options": [
        {
          "value": "stacked",
          "label": "Stacked"
        },
        {
          "value": "slider",
          "label": "Slider"
        }
      ],
      "default": "stacked"
    },
     {
        "type": "checkbox",
        "id": "show-stock-indicator",
        "default": true,
        "label": "Show Stock Indicator"
      },
     {
      "type": "checkbox",
      "id": "show_product_info",
      "label": "Show Product Info",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_size_guide",
      "label": "Show Size Guide",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_custom_content",
      "label": "Show Custom Content",
      "default": true
    },
  ],
  "disabled_on": {
    "groups": ["header", "footer"]
  }
}
{% endschema %}


{% if section.settings.image_layout == 'slider' %}
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    new Swiper('.product-gallery-swiper', {
      loop: true,
  navigation: {
    nextEl: '.swiper-button-next-smarte',
    prevEl: '.swiper-button-prev-smarte',
  },
      slidesPerView: 2,
      spaceBetween: 10
    });
  });
</script>

<style>
  .fract-main-product .product-images {
  display:block;
}
  .swiper-button-next-smarte svg {
    transform: rotate(180deg);
  }

  .swiper-buttons {
    display: flex;
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 1;
    gap:5px;
  }
  .fract-main-product .right-side-product {
  position: relative;
  top: 0;
  transform: translateY(0%);
}
</style>

{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const container = document.querySelector('.quantity-selector');
    if (!container) return;
    const input = container.querySelector('.qty-input');
    const btnPlus = container.querySelector('.plus');
    const btnMinus = container.querySelector('.minus');

    btnPlus.addEventListener('click', () => {
      input.value = Number(input.value) + 1;
      input.dispatchEvent(new Event('change'));
    });

    btnMinus.addEventListener('click', () => {
      const min = Number(input.min) || 1;
      if (Number(input.value) > min) {
        input.value = Number(input.value) - 1;
        input.dispatchEvent(new Event('change'));
      }
    });
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const detailsElements = document.querySelectorAll('.custom-accordion details');

    // ✅ Open the first one by default
    if (detailsElements.length > 0) {
      detailsElements[0].setAttribute('open', '');
    }

    detailsElements.forEach((detail) => {
      detail.addEventListener('toggle', function() {
        if (this.open) {
          detailsElements.forEach((otherDetail) => {
            if (otherDetail !== this && otherDetail.open) {
              otherDetail.open = false;
            }
          });
        }
      });
    });
  });
</script>


<script>
document.addEventListener('DOMContentLoaded', function() {
  const productId = '{{ product.id }}';
  const variantButtons = document.querySelectorAll(`#product-form-${productId} .variant-button`);
  const variantIdInput = document.getElementById(`selected-variant-id-${productId}`);

  variantButtons.forEach(button => {
    button.addEventListener('click', () => {
      if (button.disabled) return;

      // Remove active class from all
      variantButtons.forEach(btn => btn.classList.remove('active'));
      // Add active to clicked
      button.classList.add('active');

      // Update hidden input value
      variantIdInput.value = button.dataset.variantId;
    });
  });
});
</script>


