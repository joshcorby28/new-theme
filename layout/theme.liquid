<!doctype html>
<html lang="{{ request.locale.iso_code }}">
  <head>
    {% # Inlined CSS Variables %}
    {% render 'css-variables' %}

    {% # Load and preload the critical CSS %}
    {{ 'critical.css' | asset_url | stylesheet_tag: preload: true }}

    {% # Social, title, etc. %}
    {% render 'meta-tags' %}

    {{ content_for_header }}
  </head>

  <body id="hidden-theme">

   {% # Grunge Overlay Effect %}
    <canvas id="grain-canvas"></canvas>
    {% if settings['grunge-effect'] %}
        <script>
        const canvas = document.getElementById('grain-canvas');
        const ctx = canvas.getContext('2d');

        function resize() {
          canvas.width = window.innerWidth;
          canvas.height = window.innerHeight;
        }

        function drawNoise() {
          const imageData = ctx.createImageData(canvas.width, canvas.height);
          const buffer32 = new Uint32Array(imageData.data.buffer);
          for (let i = 0; i < buffer32.length; i++) {
            buffer32[i] = (Math.floor(Math.random() * 255) << 24) | 0xFFFFFF; 
          }
          ctx.putImageData(imageData, 0, 0);
        }

        function loop() {
          drawNoise();
          setTimeout(loop, 50);
        }

        window.addEventListener('resize', resize);
        resize();
        loop();
      </script>


      <style>
        #grain-canvas {
          position: fixed;
          top: 0;
          left: 0;
          width: 100vw;
          height: 100vh;
          pointer-events: none;
          opacity: {{settings.grain-opacity}};
          z-index: 9999;
        }
      </style>
    {% endif %}
   {% # Grunge Overlay Effect %}

    {% sections 'header-group' %}

   {% # Index Page %}
    {% if template == 'index' %}
    <style>
      footer {
      display:none;
    }

.player {
  text-align: center;
  margin-top:100px;
}


.player path {
  fill: red;
}

#playPauseBtn {
  background: none;
  border: none;
  cursor: pointer;
}

#record {
  margin-top: 20px;
  width: 200px;
  height: 200px;
  display: none;
  animation: spin 3s linear infinite;
}

.playing #record {
  display: block;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
    </style>
  {% endif %}

  {% # Global %}
  {% if settings.text-uppercase %}
    <style>
    h1,h2,h3,h4,h5,h6,a,span {
    text-transform:uppercase;
    }
  </style>
  {% endif %}

    <div class="player">
  <button id="playPauseBtn" aria-label="Play">
    <!-- Play Icon (SVG) -->
    <svg id="playIcon" viewBox="0 0 64 64" width="48" height="48" fill="white">
      <polygon points="16,12 52,32 16,52" />
    </svg>
    <!-- Pause Icon (SVG) -->
    <svg id="pauseIcon" viewBox="0 0 64 64" width="48" height="48" fill="white" style="display: none;">
      <rect x="16" y="12" width="10" height="40"/>
      <rect x="38" y="12" width="10" height="40"/>
    </svg>
  </button>
  <img id="record" src="https://ox-ny-dev.myshopify.com/cdn/shop/files/9fcf87557207acd6e6c3732de75aa20ecf0db375_1.jpg?v=1747933345&width=2000" alt="Record" />
  <audio id="audio" src="https://singhimalaya.github.io/Codepen/assets/music/1.mp3"></audio>
</div>

    <script>
    const playPauseBtn = document.getElementById('playPauseBtn');
const playIcon = document.getElementById('playIcon');
const pauseIcon = document.getElementById('pauseIcon');
const record = document.getElementById('record');
const audio = document.getElementById('audio');
const player = document.querySelector('.player');

let isPlaying = false;

playPauseBtn.addEventListener('click', () => {
  if (isPlaying) {
    audio.pause();
    playIcon.style.display = 'block';
    pauseIcon.style.display = 'none';
    player.classList.remove('playing');
  } else {
    audio.play();
    playIcon.style.display = 'none';
    pauseIcon.style.display = 'block';
    player.classList.add('playing');
  }
  isPlaying = !isPlaying;
});

    </script>


    {{ content_for_layout }}

    <style>
      .shopify-section-group-header-group {
      position: absolute;
      z-index: 9;
      width: 100%;
      }

      :root {
        --page-width: {{ settings.page_width | divided_by: 10 }}rem;
      }
    </style>

    {% sections 'footer-group' %}
  </body>
</html>
